@page "/index.html"
@using CardanoSharp.CatalystDemo
@using CardanoSharp.CatalystDemo.Commands;
@using CardanoSharp.CatalystDemo.Queries;
@inject MediatR.IMediator _mediator

<div class="d-flex flex-column align-items-center ">
    <div class="pt-5">
        <h1 class="light-text">Cardano Sharp Demo</h1>
    </div>
    <Button Theme="secondary" Text="Generate Wallet" OnClick="GetMnemonic" />

    @if (Mnemonic != "")
    {
        <Card Title="Mnemonic Generated" Classes="border-accent shadow-sm mb-2 mt-3 text-center">
            <div style="width:500px">
                @Mnemonic
            </div>
        </Card>
        <Card Title="Address 1" Classes="border-accent shadow-sm mb-2 mt-2 text-center">
            <div class="font-size-sm" style="width:500px">
                @Address1
            </div>
        </Card>
        <Card Title="Address 2" Classes="border-accent shadow-sm mb-2 mt-2 text-center">
            <div class="font-size-sm" style="width:500px">
                @Address2
            </div>
        </Card>
        <Card Title="Send" Classes="border-accent shadow-sm mb-5 mt-2 text-center">
            <div style="width:500px">
                <EditForm Model="@formRequest" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group text-left">
                        <label>Address</label>
                        <InputText class="form-control" @bind-Value="formRequest.Address" />
                    </div>
                    <div class="form-group text-left">
                        <label>Amount</label>
                        <InputNumber class="form-control" @bind-Value="formRequest.Amount" />
                    </div>
                    <Button Theme="primary" Text="Submit" Type="submit" />
                </EditForm>
                @if (Transaction != "")
                {
                    <div class="pt-3">
                        @Transaction
                    </div>
                }
            </div>
        </Card>
    }

</div>

@code {

    private string Mnemonic = "";
    private string Address1 = "addr_test1qqdpfnz4djvmn3xq43axkk4k0w82lthg96ugj7mqax4nv8k72mdkchnaw4fa56tyezlplr3sy54w9kwmps4psycarnysq0tccy";
    private string Address2 = "";
    private string Transaction = "";

    private async Task GetMnemonic()
    {
        var response = await _mediator.Send(new GenerateWallet.GenerateWalletCommand(24));
        Mnemonic = response.Mnemonic.Words;
        Address1 = response.Address1.ToString();
        Address2 = response.Address2.ToString();
    }

    private SendFormRequest formRequest = new SendFormRequest();

    private void HandleValidSubmit()
    {
        // Process the valid form
        Transaction = "https://link-to-transaction-on-explorer";
    }
}